# A CloudFormation template to create the Network in AWS like VPC, Subnets, Route Tables, InternetGateway, NAT Gateway with the help of parameters. This template creates a VPC with the name given by user using parameters and attach Internet Gateway to it.

# This template creates 1 Public Subnet and 6 Private subnets in the same VPC and also creates the route tables to associate the Subnets. This template also creates NAT Gateway in public subnet for private subnet to get internet access.

AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template to create the Network Resources
Parameters:
  VPCName:
    Description: Name of the VPC to be created
    Type: String
    Default: VPC
  VPCCIDRBlock:
    Description: CIDR block for the newly created VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Type: String
    Description: IP Address range for the first public Subnet
    Default: 10.0.0.0/24
  PublicSubnet1Name:
    Type: String
    Description: The name for the first public Subnet
  PrivateSubnet1CIDR:
    Type: String
    Description: IP Address range for the first private Subnet
    Default: 10.0.1.0/24
  PrivateSubnet2CIDR:
    Type: String
    Description: IP Address range for the second private Subnet
    Default: 10.0.2.0/24
  PrivateSubnet3CIDR:
    Type: String
    Description: IP Address range for the third private Subnet
    Default: 10.0.3.0/24
  PrivateSubnet1Name:
    Type: String
    Description: The name for the first private Subnet
  PrivateSubnet2Name:
    Type: String
    Description: The name for the second private Subnet
  PrivateSubnet3Name:
    Type: String
    Description: The name for the third private Subnet
  PublicRTName:
    Type: String
    Description: The name for the public route table
  PrivateRTName:
    Type: String
    Description: The name for theprivate route table
  IGWName:
    Type: String
    Description: The name for the Internet Gateway
  NATGWName:
    Type: String
    Description: The name for the NAT Gateway
  
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDRBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref VPCName
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref IGWName
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubnet1Name
      VpcId: !Ref VPC
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref PublicRTName
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  NatGateway1EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: VPC
      Tags:
        - Key: Name
          Value: EIP 1
  NatGateway1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NatGateway1EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Ref NATGWName
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnet1Name
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnet2Name
      VpcId: !Ref VPC
  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - 1
        - !GetAZs ''
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnet3Name
      VpcId: !Ref VPC
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref PrivateRTName
      VpcId: !Ref VPC
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      # GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2
  PrivateSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3
    
Outputs:
  VPC:
    Description: VPCId of the newly created VPC
    Value: !Ref VPC
    Export:
      Name: VPC
  PrivateSubnet1:
    Description: Private subnet1's id
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1
  PrivateSubnet2:
    Description: Private subnet2's id
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2
  PrivateSubnet3:
    Description: Private subnet3's id
    Value: !Ref PrivateSubnet3
    Export:
      Name: PrivateSubnet3
  PublicSubnet1:
    Description: Public subnet1's Id
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1
  PublicRouteTable:
    Description: Public Route Table
    Value: !Ref PublicRouteTable
    Export:
      Name: PublicRouteTable
  PrivateRouteTable:
    Description: Private Route Table
    Value: !Ref PrivateRouteTable
    Export:
      Name: PrivateRouteTable
